var tape = require('tape')
var run = require('./helpers/run')
var put = require('./helpers/put')
var create = require('./helpers/create')
var validate = require('./helpers/fuzzing').validate

tape('autogenerated failing fuzz test #1', function (t) {
  var writesPerReplication = [
    [
      ['fefhe', [null, 'hgbbhiegadhdeegdebfa']],
      ['gjegc/gjegc', ['jegahfeddccagaaghgce']],
      ['gjegc/gidjb', ['jjbchagfijbhiiijcaig']],
      ['gjegc/feffb', ['eiebhdddigbhheaacjdj']],
      ['gjegc/feigc', [null, 'ajfgdihjedbcdhjgcaed']],
      ['gjegc/adifa', [null, 'fghhbhchhdbidbbbfabh']]
    ],
    [
      ['gjegc/caghc', ['gfjcgaebibbccjceggej']],
      ['gjegc/ghbdb', [null, 'ggbddcahebaejbegaceh']],
      ['gjegc/aaahi/aaahi', ['bibggfheidahefhhgdci']]
    ]
  ].map(b => new Map(b))

  create.many(2, function (err, dbs, replicateByIndex) {
    t.error(err)
    run(
      cb => {
        put(
          dbs[1],
          [
            {
              key: 'fefhe',
              value: 'hgbbhiegadhdeegdebfa'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'gjegc/gjegc',
              value: 'jegahfeddccagaaghgce'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'gjegc/gidjb',
              value: 'jjbchagfijbhiiijcaig'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'gjegc/feffb',
              value: 'eiebhdddigbhheaacjdj'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[1],
          [
            {
              key: 'gjegc/feigc',
              value: 'ajfgdihjedbcdhjgcaed'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[1],
          [
            {
              key: 'gjegc/adifa',
              value: 'fghhbhchhdbidbbbfabh'
            }
          ],
          cb
        )
      },
      cb => replicateByIndex(cb),
      cb => validate(t, dbs[0], writesPerReplication.slice(0, 1), cb),
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'gjegc/caghc',
              value: 'gfjcgaebibbccjceggej'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[1],
          [
            {
              key: 'gjegc/ghbdb',
              value: 'ggbddcahebaejbegaceh'
            }
          ],
          cb
        )
      },
      cb => {
        put(
          dbs[0],
          [
            {
              key: 'gjegc/aaahi/aaahi',
              value: 'bibggfheidahefhhgdci'
            }
          ],
          cb
        )
      },
      cb => replicateByIndex(cb),
      cb => validate(t, dbs[0], writesPerReplication.slice(0, 2), cb),
      err => {
        t.error(err)
        t.end()
      }
    )
  })
})
